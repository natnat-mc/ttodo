#!/usr/bin/env lua
local todos = require 'todo.todos'
local util = require 'todo.util'
local ansi = require 'todo.ansi'

local commands = {}

function commands.show()
	todos.load()
	todos.sort()
	for todo in todos.each() do
		util.printi(todo, "[#{green}${betterdate:10}#{reset}] [#{cyan}${status:7}#{reset}] ${text}")
	end
end
commands.list = commands.show

function commands.edit()
	local editor = os.getenv("EDITOR") or os.getenv("VISUAL") or "vi"
	return os.execute(editor.." "..todos.todofile)
end
commands.vi = commands.edit

function commands.cat()
	local fd = assert(io.open(todos.todofile, 'r'))
	for line in fd:lines() do
		io.write(line, '\n')
	end
	fd:close()
end

function commands.file()
	print(todos.todofile)
end

function commands.tui()
	require 'todo.ttui'
end

function commands.add(text)
	todos.load()
	todos.new(text, {d=os.date("%Y%m%d")})
	todos.sort()
	todos.save()
end

function commands.printf(fmt)
	todos.load()
	todos.sort()
	for todo in todos.each() do
		util.printi(todo, fmt)
	end
end

function commands.count()
	local fd = assert(io.open(todos.todofile, 'r'))
	local n = 0
	for line in fd:lines() do
		n = n + 1
	end
	print(n)
end

function commands._fields()
	for field in pairs(todos.todomt.__get) do
		print(field)
	end
	print "d"
	print "s"
end

function commands._commands()
	for k in pairs(commands) do
		print(k)
	end
end

local cmd = ...
if cmd == nil then cmd = "tui" end
cmd = commands[cmd] or error("No such command "..cmd)
return cmd(select(2, ...))
